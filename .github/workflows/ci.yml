name: CI - CD

on:
  push:
    branches: [develop, main, cd]
  pull_request:
    branches: [develop, main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      compras-changes: ${{ steps.filter.outputs.compras-changes }}
      ventas-changes: ${{ steps.filter.outputs.ventas-changes }}
      clientes-changes: ${{ steps.filter.outputs.clientes-changes }}
      bodegas-changes: ${{ steps.filter.outputs.bodegas-changes }}

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 📂 Detectar cambios por carpeta
        id: filter
        uses: dorny/paths-filter@v2
        with:
          base: develop
          filters: |
            compras-changes:
              - 'compras/**'
            ventas-changes:
              - 'ventas/**'
            clientes-changes:
              - 'clientes/**'
            bodegas-changes:
              - 'bodegas/**'

  compras-tests:
    name: 🧪 Compras - Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.compras-changes == 'true' }}
    env:
      TESTING: "true"

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('compras/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 🛠️ Instalar dependencias - Compras
        run: |
          pip install --upgrade pip
          pip install -r compras/requirements.txt
          pip install pytest-cov

      - name: ✅ Ejecutar tests con cobertura - Compras
        working-directory: compras
        run: |
          pytest --cov=src --cov-fail-under=70 tests/

      - name: 📊 Reportar cobertura - Compras
        working-directory: compras
        env:
          PYTHONPATH: .
        run: |
          coverage report

  compras-build-dev:
    name: 🐳 Compras - Build & Push Docker
    runs-on: ubuntu-latest
    needs: compras-tests
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🐳 Construir y subir imagen Docker - Compras
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          IMAGE=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/compras:development
          docker build -t $IMAGE compras/
          docker push $IMAGE

  compras-deploy:
    name: 🚀 Compras - Deploy
    runs-on: ubuntu-latest
    needs: compras-build-dev
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🚀 Desplegar imagen Docker - Compras
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud run deploy compras \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/compras:development \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --port=8000 \
            --set-env-vars=DATABASE_URL=${{ secrets.DATABASE_URL_COMPRAS }}

  ventas-tests:
    name: 🧪 Ventas - Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ventas-changes == 'true' }}

    env:
      TESTING: "true"

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 🛠️ Instalar dependencias - Ventas
        run: |
          pip install --upgrade pip
          pip install -r ventas/requirements.txt
          pip install pytest-cov

      - name: ✅ Ejecutar tests con cobertura - Ventas
        working-directory: ventas
        env:
          PYTHONPATH: .
        run: |
          pytest --cov=src --cov-fail-under=70 tests/

      - name: 📊 Reportar cobertura - Ventas
        working-directory: ventas
        run: |
          coverage report

  ventas-build-dev:
    name: 🐳 Ventas - Build & Push Docker
    runs-on: ubuntu-latest
    needs: ventas-tests
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🐳 Construir y subir imagen Docker - Ventas
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          IMAGE=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/ventas:development
          docker build -t $IMAGE ventas/
          docker push $IMAGE

  ventas-deploy:
    name: 🚀 Ventas - Deploy
    runs-on: ubuntu-latest
    needs: ventas-build-dev
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🚀 Desplegar imagen Docker - Ventas
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud run deploy ventas \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/ventas:development \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --port=8001 \
            --set-env-vars=DATABASE_URL=${{ secrets.DATABASE_URL_VENTAS }}

  clientes-tests:
    name: 🧪 Clientes - Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.clientes-changes == 'true' }}

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 🛠️ Instalar dependencias - Clientes
        run: |
          pip install --upgrade pip
          pip install -r clientes/requirements.txt
          pip install pytest-cov

      - name: ✅ Ejecutar tests con cobertura - Clientes
        working-directory: clientes
        env:
          PYTHONPATH: .
        run: |
          pytest --cov=src --cov-fail-under=70 tests/

      - name: 📊 Reportar cobertura - Clientes
        working-directory: clientes
        run: |
          coverage report

  clientes-build-dev:
    name: 🐳 Clientes - Build & Push Docker
    runs-on: ubuntu-latest
    needs: clientes-tests
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🐳 Construir y subir imagen Docker - Clientes
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          IMAGE=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/clientes:development
          docker build -t $IMAGE clientes/
          docker push $IMAGE

  clientes-deploy:
    name: 🚀 Clientes - Deploy
    runs-on: ubuntu-latest
    needs: clientes-build-dev
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🚀 Desplegar imagen Docker - Clientes
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud run deploy clientes \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/clientes:development \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --port=8002

  bodegas-tests:
    name: 🧪 Bodegas - Tests
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.bodegas-changes == 'true' }}
    env:
      TESTING: "true"

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 🛠️ Instalar dependencias - Bodegas
        run: |
          pip install --upgrade pip
          pip install -r bodegas/requirements.txt
          pip install pytest-cov

      - name: ✅ Ejecutar tests con cobertura - Bodegas
        working-directory: bodegas
        env:
          PYTHONPATH: .
        run: |
          pytest --cov=src --cov-fail-under=70 tests/

      - name: 📊 Reportar cobertura - Bodegas
        working-directory: bodegas
        run: |
          coverage report

  bodegas-build-dev:
    name: 🐳 Bodegas - Build & Push Docker
    runs-on: ubuntu-latest
    needs: bodegas-tests
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🐳 Construir y subir imagen Docker - Bodegas
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          IMAGE=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/bodegas:development
          docker build -t $IMAGE bodegas/
          docker push $IMAGE

  bodegas-deploy:
    name: 🚀 Bodegas - Deploy
    runs-on: ubuntu-latest
    needs: bodegas-build-dev
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v3

      - name: 🔐 Configurar GCP
        uses: ./.github/actions/setup-gcp
        with:
          gcp_credentials: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 🚀 Desplegar imagen Docker - Bodegas
        env:
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          gcloud run deploy bodegas \
            --image=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/final-project/bodegas:development \
            --platform=managed \
            --region=us-central1 \
            --allow-unauthenticated \
            --port=8003 \
            --set-env-vars=DATABASE_URL=${{ secrets.DATABASE_URL_BODEGAS }} \
            --set-env-vars=GCP_PUBSUB_CREDENTIALS_PATH=/secrets/cloud-key-json \
            --set-env-vars=CLOUD_PROJECT_ID=${{ secrets.CLOUD_PROJECT_ID }} \
            --set-env-vars=PRODUCT_TOPIC=${{ secrets.PRODUCT_TOPIC }} \
            --set-env-vars=PRODUCT_SELLED_SUB=${{ secrets.PRODUCT_SELLED_SUB }} \
            --update-secrets=cloud-key-json=cloud-key-pubsub:latest
